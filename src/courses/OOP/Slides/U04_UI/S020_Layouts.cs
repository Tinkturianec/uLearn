using System.Windows.Forms;
using uLearn;

namespace OOP.Slides.U04_UI
{
	[Slide("Layout", "887CBC234EBB4AF5825BB4C57815ADEE")]
	public class S020_Layouts
	{
		/*
		Чуть менее очевидная, но всё ещё лежащая на поверхности задача — 
		избавление от дублирования кода, отвечающего за правильное расположение 
		контролов в окне и их поведение при изменении размеров окна, 
		размеров системного шрифта и т.п.

		В Windows Forms с самого начала был встроен механизм якорей и стыковки 
		— свойства Anchor и Dock у любого контрола. 
		
		![Anchor and Dock](anchors.png)

		Якоря (anchors) позволяют зафиксировать расстояние от границы контрола 
		до границы родительского контрола (например самого окна).
		С помощью них можно делать элементы управления выравненные по нижнему или правому краю окна.

		Dock позволяет задать способ заполнения свободного пространства контролом. 
		Так можно делать растягивающиеся элементы управления.

		В Java swing для этого используются LayoutManager-ы.
		Каждый конкретный LayoutManager реализует свой алгоритм выравнивания 
		и расположения добавленных в него контролов.
		Сложный интерфейс реализуется комбинированием нескольких LayoutManager-ов.
		
		Примеры использования разных LayoutManager-ов можно посмотреть в наглядной 
		[официальной документации](https://docs.oracle.com/javase/tutorial/uiswing/layout/visual.html).

		В целом механизм LayoutManager предоставляет более грамотный способ организации контролов, 
		хоть и несколько более сложный в освоении и использовании. 
		В частности поэтому позже в .NET Windows Forms также появились простые аналоги 
		LayoutManager-ов — SplitContainer, TableLayout, FlowLayout.

		*/
	}
}